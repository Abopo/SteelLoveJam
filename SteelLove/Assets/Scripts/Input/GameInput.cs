//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/Settings/GameInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInput"",
    ""maps"": [
        {
            ""name"": ""Racing"",
            ""id"": ""8aa31640-5e83-41d8-8dd8-ce5dff84399b"",
            ""actions"": [
                {
                    ""name"": ""MainThruster"",
                    ""type"": ""Value"",
                    ""id"": ""d261877e-1dfa-4d8d-869f-f99ef7a4939a"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": ""AxisDeadzone"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ReverseThruster"",
                    ""type"": ""Value"",
                    ""id"": ""b2deeeee-a328-440a-ba1d-4290d8889b2c"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": ""AxisDeadzone"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotationThrusters"",
                    ""type"": ""Value"",
                    ""id"": ""45a1d724-176c-4fca-98d8-f2c426e4d64f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""StickDeadzone"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftThruster"",
                    ""type"": ""Value"",
                    ""id"": ""7488f641-036c-48a4-9ff2-6c6745fa2674"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightThruster"",
                    ""type"": ""Value"",
                    ""id"": ""621808d5-3a14-40e6-8d44-41e9842d94c5"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""a74c7fd5-a293-40ba-9a13-c04b423c3e95"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StepLeft"",
                    ""type"": ""Button"",
                    ""id"": ""541db52a-b2c7-4c14-b2f7-31ab53c532c3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StepRight"",
                    ""type"": ""Button"",
                    ""id"": ""cb9fb9a3-bd09-42b8-a1c7-f15795d93385"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Boost"",
                    ""type"": ""Button"",
                    ""id"": ""1283ca4d-8b21-4deb-acd4-ad4e4783b766"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Brake"",
                    ""type"": ""Button"",
                    ""id"": ""c7bdc70d-01d6-42f9-b80b-79ac77233acd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""7c08930d-5b4c-412e-a3d3-11d7c82896ff"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainThruster"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""afd1e610-8368-43a0-a793-a8889fbef424"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainThruster"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2d17ec0d-f969-47a4-8fbf-3cf973397c83"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainThruster"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8062ea84-9206-4ba1-b919-cd18dad864ca"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotationThrusters"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard QE"",
                    ""id"": ""7cf894ed-abe0-4660-b0e2-868b129c8ba6"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotationThrusters"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""fc4d1197-ce61-4083-81d0-f0a9e6a9bc14"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotationThrusters"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""9f8ca311-6b1e-42b7-8854-b795ffc2fa14"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotationThrusters"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b92b73f6-eccf-4919-9cae-d7f11d4c09c9"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotationThrusters"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f16a7617-fb82-4805-b639-22daae52a50c"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotationThrusters"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2291f148-fe7b-46a0-a1fc-f117d2092edd"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftThruster"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e390258-8212-4d09-bfc3-274e5ed29607"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftThruster"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""60e7a66f-2c91-469e-b27c-43dc985c8527"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftThruster"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d2d22c6-cea0-4f6e-b6e8-97ec5ce1e171"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightThruster"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5ea9cc2-fbd8-4907-8538-925a297cfd5d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightThruster"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb2db668-6f47-4d33-b744-101c76f081bc"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightThruster"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0cfa937d-7e14-4bc0-992c-c9dd48ad6ce8"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e48d7699-224c-4e14-b1f0-be2667c08711"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""457923c9-c9ca-4f3b-9c9a-42d28e04647f"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StepLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""df578efb-f61d-4c14-acb6-72ed930cb4e0"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StepRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cb780378-94fa-44ac-93ba-e2ebd5d19ca7"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Boost"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e4daec6-36ac-4040-898e-6737ec80910d"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Boost"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""029194bc-dc8c-4c9f-bbf4-bce70dd59e03"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e765c15-1851-4bfa-9c54-7b52abc241ab"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2ddc966b-64d6-431e-b265-ff21841d4d1c"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReverseThruster"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""BreakRoom"",
            ""id"": ""787b259f-294b-4efe-a036-bb898c655bee"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""3793d084-f132-449b-b7f7-182c656ec9b8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""38948878-e5eb-4575-b9ff-f045d21824b0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d3e8b684-af78-49e4-a28e-97909f3bdc29"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard "",
                    ""id"": ""483daed1-a60a-40c4-a3c1-7b7f65485bf3"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9d01586a-d9bd-4eb2-bb65-1a517e26335f"",
                    ""path"": ""<Keyboard>/#(W)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1e1513b4-d47b-4570-9ed1-8c10472f8178"",
                    ""path"": ""<Keyboard>/#(S)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c2a889a3-c2ef-49c1-bf0c-7ea7c33d111b"",
                    ""path"": ""<Keyboard>/#(A)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4f3dcfcf-c3ce-4b8b-8239-872fb3308dd1"",
                    ""path"": ""<Keyboard>/#(D)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""88869ed0-03e4-4813-ab01-7ae8e4783a13"",
                    ""path"": ""<Keyboard>/#(E)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8b093446-6cfa-4c72-bc17-e149c3ee6776"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""f342990e-1d30-4bb0-8c59-ab4629f408f4"",
            ""actions"": [
                {
                    ""name"": ""Confirm"",
                    ""type"": ""Button"",
                    ""id"": ""c16b2b93-1cff-4b3b-ad6d-bbb3abf89cdb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""2438b6fe-1bdb-497e-b647-9e8918fee4ba"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveCursor"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a5084261-34b1-4b3a-925f-dcdba3cc794f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left Click"",
                    ""type"": ""Button"",
                    ""id"": ""c6f2fa39-4d6c-47e9-aea5-81903f274c23"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Point"",
                    ""type"": ""Button"",
                    ""id"": ""a93d74e0-89ee-4fcf-b848-deb13e884445"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""26e1ac97-ab70-4b82-b863-a73b97f72ba7"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c11728e9-f6e5-4df1-9c49-1fb7641df9cd"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d3dc945c-1828-4fba-8151-9430e8323be4"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee5af364-2624-4e3a-8a75-777cc9f3325c"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e19c1f7-c46c-40f4-ba4b-3f417156c6c9"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c872487-d289-4ff6-8411-816c2a6f45be"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5b7df6ef-758a-41c0-a437-dcc7795e6165"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard WASD"",
                    ""id"": ""0d5ba9cc-f491-4884-80c8-b69de13a718f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCursor"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""fe52446f-0816-4c03-902f-0fa17cfe3c60"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8d4aa9d8-70cb-4553-b5bc-30f28cc018dc"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2ba419bf-547d-4f53-95dc-d1846d48b2c9"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""7a63e519-e3ef-461d-996a-6605f5484ea7"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d98d7ca2-bd9e-41c6-89e7-80f4bc1a0206"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""696f7a67-1c5d-40ca-bfa4-7bc5bda89680"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Racing
        m_Racing = asset.FindActionMap("Racing", throwIfNotFound: true);
        m_Racing_MainThruster = m_Racing.FindAction("MainThruster", throwIfNotFound: true);
        m_Racing_ReverseThruster = m_Racing.FindAction("ReverseThruster", throwIfNotFound: true);
        m_Racing_RotationThrusters = m_Racing.FindAction("RotationThrusters", throwIfNotFound: true);
        m_Racing_LeftThruster = m_Racing.FindAction("LeftThruster", throwIfNotFound: true);
        m_Racing_RightThruster = m_Racing.FindAction("RightThruster", throwIfNotFound: true);
        m_Racing_Pause = m_Racing.FindAction("Pause", throwIfNotFound: true);
        m_Racing_StepLeft = m_Racing.FindAction("StepLeft", throwIfNotFound: true);
        m_Racing_StepRight = m_Racing.FindAction("StepRight", throwIfNotFound: true);
        m_Racing_Boost = m_Racing.FindAction("Boost", throwIfNotFound: true);
        m_Racing_Brake = m_Racing.FindAction("Brake", throwIfNotFound: true);
        // BreakRoom
        m_BreakRoom = asset.FindActionMap("BreakRoom", throwIfNotFound: true);
        m_BreakRoom_Movement = m_BreakRoom.FindAction("Movement", throwIfNotFound: true);
        m_BreakRoom_Interact = m_BreakRoom.FindAction("Interact", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Confirm = m_UI.FindAction("Confirm", throwIfNotFound: true);
        m_UI_Back = m_UI.FindAction("Back", throwIfNotFound: true);
        m_UI_MoveCursor = m_UI.FindAction("MoveCursor", throwIfNotFound: true);
        m_UI_LeftClick = m_UI.FindAction("Left Click", throwIfNotFound: true);
        m_UI_Point = m_UI.FindAction("Point", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Racing
    private readonly InputActionMap m_Racing;
    private IRacingActions m_RacingActionsCallbackInterface;
    private readonly InputAction m_Racing_MainThruster;
    private readonly InputAction m_Racing_ReverseThruster;
    private readonly InputAction m_Racing_RotationThrusters;
    private readonly InputAction m_Racing_LeftThruster;
    private readonly InputAction m_Racing_RightThruster;
    private readonly InputAction m_Racing_Pause;
    private readonly InputAction m_Racing_StepLeft;
    private readonly InputAction m_Racing_StepRight;
    private readonly InputAction m_Racing_Boost;
    private readonly InputAction m_Racing_Brake;
    public struct RacingActions
    {
        private @GameInput m_Wrapper;
        public RacingActions(@GameInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @MainThruster => m_Wrapper.m_Racing_MainThruster;
        public InputAction @ReverseThruster => m_Wrapper.m_Racing_ReverseThruster;
        public InputAction @RotationThrusters => m_Wrapper.m_Racing_RotationThrusters;
        public InputAction @LeftThruster => m_Wrapper.m_Racing_LeftThruster;
        public InputAction @RightThruster => m_Wrapper.m_Racing_RightThruster;
        public InputAction @Pause => m_Wrapper.m_Racing_Pause;
        public InputAction @StepLeft => m_Wrapper.m_Racing_StepLeft;
        public InputAction @StepRight => m_Wrapper.m_Racing_StepRight;
        public InputAction @Boost => m_Wrapper.m_Racing_Boost;
        public InputAction @Brake => m_Wrapper.m_Racing_Brake;
        public InputActionMap Get() { return m_Wrapper.m_Racing; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RacingActions set) { return set.Get(); }
        public void SetCallbacks(IRacingActions instance)
        {
            if (m_Wrapper.m_RacingActionsCallbackInterface != null)
            {
                @MainThruster.started -= m_Wrapper.m_RacingActionsCallbackInterface.OnMainThruster;
                @MainThruster.performed -= m_Wrapper.m_RacingActionsCallbackInterface.OnMainThruster;
                @MainThruster.canceled -= m_Wrapper.m_RacingActionsCallbackInterface.OnMainThruster;
                @ReverseThruster.started -= m_Wrapper.m_RacingActionsCallbackInterface.OnReverseThruster;
                @ReverseThruster.performed -= m_Wrapper.m_RacingActionsCallbackInterface.OnReverseThruster;
                @ReverseThruster.canceled -= m_Wrapper.m_RacingActionsCallbackInterface.OnReverseThruster;
                @RotationThrusters.started -= m_Wrapper.m_RacingActionsCallbackInterface.OnRotationThrusters;
                @RotationThrusters.performed -= m_Wrapper.m_RacingActionsCallbackInterface.OnRotationThrusters;
                @RotationThrusters.canceled -= m_Wrapper.m_RacingActionsCallbackInterface.OnRotationThrusters;
                @LeftThruster.started -= m_Wrapper.m_RacingActionsCallbackInterface.OnLeftThruster;
                @LeftThruster.performed -= m_Wrapper.m_RacingActionsCallbackInterface.OnLeftThruster;
                @LeftThruster.canceled -= m_Wrapper.m_RacingActionsCallbackInterface.OnLeftThruster;
                @RightThruster.started -= m_Wrapper.m_RacingActionsCallbackInterface.OnRightThruster;
                @RightThruster.performed -= m_Wrapper.m_RacingActionsCallbackInterface.OnRightThruster;
                @RightThruster.canceled -= m_Wrapper.m_RacingActionsCallbackInterface.OnRightThruster;
                @Pause.started -= m_Wrapper.m_RacingActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_RacingActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_RacingActionsCallbackInterface.OnPause;
                @StepLeft.started -= m_Wrapper.m_RacingActionsCallbackInterface.OnStepLeft;
                @StepLeft.performed -= m_Wrapper.m_RacingActionsCallbackInterface.OnStepLeft;
                @StepLeft.canceled -= m_Wrapper.m_RacingActionsCallbackInterface.OnStepLeft;
                @StepRight.started -= m_Wrapper.m_RacingActionsCallbackInterface.OnStepRight;
                @StepRight.performed -= m_Wrapper.m_RacingActionsCallbackInterface.OnStepRight;
                @StepRight.canceled -= m_Wrapper.m_RacingActionsCallbackInterface.OnStepRight;
                @Boost.started -= m_Wrapper.m_RacingActionsCallbackInterface.OnBoost;
                @Boost.performed -= m_Wrapper.m_RacingActionsCallbackInterface.OnBoost;
                @Boost.canceled -= m_Wrapper.m_RacingActionsCallbackInterface.OnBoost;
                @Brake.started -= m_Wrapper.m_RacingActionsCallbackInterface.OnBrake;
                @Brake.performed -= m_Wrapper.m_RacingActionsCallbackInterface.OnBrake;
                @Brake.canceled -= m_Wrapper.m_RacingActionsCallbackInterface.OnBrake;
            }
            m_Wrapper.m_RacingActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MainThruster.started += instance.OnMainThruster;
                @MainThruster.performed += instance.OnMainThruster;
                @MainThruster.canceled += instance.OnMainThruster;
                @ReverseThruster.started += instance.OnReverseThruster;
                @ReverseThruster.performed += instance.OnReverseThruster;
                @ReverseThruster.canceled += instance.OnReverseThruster;
                @RotationThrusters.started += instance.OnRotationThrusters;
                @RotationThrusters.performed += instance.OnRotationThrusters;
                @RotationThrusters.canceled += instance.OnRotationThrusters;
                @LeftThruster.started += instance.OnLeftThruster;
                @LeftThruster.performed += instance.OnLeftThruster;
                @LeftThruster.canceled += instance.OnLeftThruster;
                @RightThruster.started += instance.OnRightThruster;
                @RightThruster.performed += instance.OnRightThruster;
                @RightThruster.canceled += instance.OnRightThruster;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @StepLeft.started += instance.OnStepLeft;
                @StepLeft.performed += instance.OnStepLeft;
                @StepLeft.canceled += instance.OnStepLeft;
                @StepRight.started += instance.OnStepRight;
                @StepRight.performed += instance.OnStepRight;
                @StepRight.canceled += instance.OnStepRight;
                @Boost.started += instance.OnBoost;
                @Boost.performed += instance.OnBoost;
                @Boost.canceled += instance.OnBoost;
                @Brake.started += instance.OnBrake;
                @Brake.performed += instance.OnBrake;
                @Brake.canceled += instance.OnBrake;
            }
        }
    }
    public RacingActions @Racing => new RacingActions(this);

    // BreakRoom
    private readonly InputActionMap m_BreakRoom;
    private IBreakRoomActions m_BreakRoomActionsCallbackInterface;
    private readonly InputAction m_BreakRoom_Movement;
    private readonly InputAction m_BreakRoom_Interact;
    public struct BreakRoomActions
    {
        private @GameInput m_Wrapper;
        public BreakRoomActions(@GameInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_BreakRoom_Movement;
        public InputAction @Interact => m_Wrapper.m_BreakRoom_Interact;
        public InputActionMap Get() { return m_Wrapper.m_BreakRoom; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BreakRoomActions set) { return set.Get(); }
        public void SetCallbacks(IBreakRoomActions instance)
        {
            if (m_Wrapper.m_BreakRoomActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_BreakRoomActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_BreakRoomActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_BreakRoomActionsCallbackInterface.OnMovement;
                @Interact.started -= m_Wrapper.m_BreakRoomActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_BreakRoomActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_BreakRoomActionsCallbackInterface.OnInteract;
            }
            m_Wrapper.m_BreakRoomActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
            }
        }
    }
    public BreakRoomActions @BreakRoom => new BreakRoomActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_Confirm;
    private readonly InputAction m_UI_Back;
    private readonly InputAction m_UI_MoveCursor;
    private readonly InputAction m_UI_LeftClick;
    private readonly InputAction m_UI_Point;
    public struct UIActions
    {
        private @GameInput m_Wrapper;
        public UIActions(@GameInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Confirm => m_Wrapper.m_UI_Confirm;
        public InputAction @Back => m_Wrapper.m_UI_Back;
        public InputAction @MoveCursor => m_Wrapper.m_UI_MoveCursor;
        public InputAction @LeftClick => m_Wrapper.m_UI_LeftClick;
        public InputAction @Point => m_Wrapper.m_UI_Point;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @Confirm.started -= m_Wrapper.m_UIActionsCallbackInterface.OnConfirm;
                @Confirm.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnConfirm;
                @Confirm.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnConfirm;
                @Back.started -= m_Wrapper.m_UIActionsCallbackInterface.OnBack;
                @Back.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnBack;
                @Back.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnBack;
                @MoveCursor.started -= m_Wrapper.m_UIActionsCallbackInterface.OnMoveCursor;
                @MoveCursor.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnMoveCursor;
                @MoveCursor.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnMoveCursor;
                @LeftClick.started -= m_Wrapper.m_UIActionsCallbackInterface.OnLeftClick;
                @LeftClick.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnLeftClick;
                @LeftClick.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnLeftClick;
                @Point.started -= m_Wrapper.m_UIActionsCallbackInterface.OnPoint;
                @Point.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnPoint;
                @Point.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnPoint;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Confirm.started += instance.OnConfirm;
                @Confirm.performed += instance.OnConfirm;
                @Confirm.canceled += instance.OnConfirm;
                @Back.started += instance.OnBack;
                @Back.performed += instance.OnBack;
                @Back.canceled += instance.OnBack;
                @MoveCursor.started += instance.OnMoveCursor;
                @MoveCursor.performed += instance.OnMoveCursor;
                @MoveCursor.canceled += instance.OnMoveCursor;
                @LeftClick.started += instance.OnLeftClick;
                @LeftClick.performed += instance.OnLeftClick;
                @LeftClick.canceled += instance.OnLeftClick;
                @Point.started += instance.OnPoint;
                @Point.performed += instance.OnPoint;
                @Point.canceled += instance.OnPoint;
            }
        }
    }
    public UIActions @UI => new UIActions(this);
    public interface IRacingActions
    {
        void OnMainThruster(InputAction.CallbackContext context);
        void OnReverseThruster(InputAction.CallbackContext context);
        void OnRotationThrusters(InputAction.CallbackContext context);
        void OnLeftThruster(InputAction.CallbackContext context);
        void OnRightThruster(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnStepLeft(InputAction.CallbackContext context);
        void OnStepRight(InputAction.CallbackContext context);
        void OnBoost(InputAction.CallbackContext context);
        void OnBrake(InputAction.CallbackContext context);
    }
    public interface IBreakRoomActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnConfirm(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
        void OnMoveCursor(InputAction.CallbackContext context);
        void OnLeftClick(InputAction.CallbackContext context);
        void OnPoint(InputAction.CallbackContext context);
    }
}
